// Code generated by go-swagger; DO NOT EDIT.

package link

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "shortener-api/models"
)

// CreateShortLinkOKCode is the HTTP code returned for type CreateShortLinkOK
const CreateShortLinkOKCode int = 200

/*CreateShortLinkOK Get link

swagger:response createShortLinkOK
*/
type CreateShortLinkOK struct {

	/*
	  In: Body
	*/
	Payload *models.Link `json:"body,omitempty"`
}

// NewCreateShortLinkOK creates CreateShortLinkOK with default headers values
func NewCreateShortLinkOK() *CreateShortLinkOK {

	return &CreateShortLinkOK{}
}

// WithPayload adds the payload to the create short link o k response
func (o *CreateShortLinkOK) WithPayload(payload *models.Link) *CreateShortLinkOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create short link o k response
func (o *CreateShortLinkOK) SetPayload(payload *models.Link) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateShortLinkOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateShortLinkBadRequestCode is the HTTP code returned for type CreateShortLinkBadRequest
const CreateShortLinkBadRequestCode int = 400

/*CreateShortLinkBadRequest Bad Request

swagger:response createShortLinkBadRequest
*/
type CreateShortLinkBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateShortLinkBadRequest creates CreateShortLinkBadRequest with default headers values
func NewCreateShortLinkBadRequest() *CreateShortLinkBadRequest {

	return &CreateShortLinkBadRequest{}
}

// WithPayload adds the payload to the create short link bad request response
func (o *CreateShortLinkBadRequest) WithPayload(payload *models.Error) *CreateShortLinkBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create short link bad request response
func (o *CreateShortLinkBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateShortLinkBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateShortLinkUnauthorizedCode is the HTTP code returned for type CreateShortLinkUnauthorized
const CreateShortLinkUnauthorizedCode int = 401

/*CreateShortLinkUnauthorized Authentication information is missing or invalid

swagger:response createShortLinkUnauthorized
*/
type CreateShortLinkUnauthorized struct {
	/*

	 */
	WWWAuthenticate string `json:"WWW_Authenticate"`

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateShortLinkUnauthorized creates CreateShortLinkUnauthorized with default headers values
func NewCreateShortLinkUnauthorized() *CreateShortLinkUnauthorized {

	return &CreateShortLinkUnauthorized{}
}

// WithWWWAuthenticate adds the wWWAuthenticate to the create short link unauthorized response
func (o *CreateShortLinkUnauthorized) WithWWWAuthenticate(wWWAuthenticate string) *CreateShortLinkUnauthorized {
	o.WWWAuthenticate = wWWAuthenticate
	return o
}

// SetWWWAuthenticate sets the wWWAuthenticate to the create short link unauthorized response
func (o *CreateShortLinkUnauthorized) SetWWWAuthenticate(wWWAuthenticate string) {
	o.WWWAuthenticate = wWWAuthenticate
}

// WithPayload adds the payload to the create short link unauthorized response
func (o *CreateShortLinkUnauthorized) WithPayload(payload *models.Error) *CreateShortLinkUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create short link unauthorized response
func (o *CreateShortLinkUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateShortLinkUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header WWW_Authenticate

	wWWAuthenticate := o.WWWAuthenticate
	if wWWAuthenticate != "" {
		rw.Header().Set("WWW_Authenticate", wWWAuthenticate)
	}

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
