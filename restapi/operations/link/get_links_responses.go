// Code generated by go-swagger; DO NOT EDIT.

package link

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "shortener-api/models"
)

// GetLinksOKCode is the HTTP code returned for type GetLinksOK
const GetLinksOKCode int = 200

/*GetLinksOK Get array of links

swagger:response getLinksOK
*/
type GetLinksOK struct {

	/*
	  In: Body
	*/
	Payload *GetLinksOKBody `json:"body,omitempty"`
}

// NewGetLinksOK creates GetLinksOK with default headers values
func NewGetLinksOK() *GetLinksOK {

	return &GetLinksOK{}
}

// WithPayload adds the payload to the get links o k response
func (o *GetLinksOK) WithPayload(payload *GetLinksOKBody) *GetLinksOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get links o k response
func (o *GetLinksOK) SetPayload(payload *GetLinksOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetLinksOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetLinksUnauthorizedCode is the HTTP code returned for type GetLinksUnauthorized
const GetLinksUnauthorizedCode int = 401

/*GetLinksUnauthorized Authentication information is missing or invalid

swagger:response getLinksUnauthorized
*/
type GetLinksUnauthorized struct {
	/*

	 */
	WWWAuthenticate string `json:"WWW_Authenticate"`

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetLinksUnauthorized creates GetLinksUnauthorized with default headers values
func NewGetLinksUnauthorized() *GetLinksUnauthorized {

	return &GetLinksUnauthorized{}
}

// WithWWWAuthenticate adds the wWWAuthenticate to the get links unauthorized response
func (o *GetLinksUnauthorized) WithWWWAuthenticate(wWWAuthenticate string) *GetLinksUnauthorized {
	o.WWWAuthenticate = wWWAuthenticate
	return o
}

// SetWWWAuthenticate sets the wWWAuthenticate to the get links unauthorized response
func (o *GetLinksUnauthorized) SetWWWAuthenticate(wWWAuthenticate string) {
	o.WWWAuthenticate = wWWAuthenticate
}

// WithPayload adds the payload to the get links unauthorized response
func (o *GetLinksUnauthorized) WithPayload(payload *models.Error) *GetLinksUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get links unauthorized response
func (o *GetLinksUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetLinksUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header WWW_Authenticate

	wWWAuthenticate := o.WWWAuthenticate
	if wWWAuthenticate != "" {
		rw.Header().Set("WWW_Authenticate", wWWAuthenticate)
	}

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
