// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "shortener-api/models"
)

// LogoutUserNoContentCode is the HTTP code returned for type LogoutUserNoContent
const LogoutUserNoContentCode int = 204

/*LogoutUserNoContent NoContent

swagger:response logoutUserNoContent
*/
type LogoutUserNoContent struct {
}

// NewLogoutUserNoContent creates LogoutUserNoContent with default headers values
func NewLogoutUserNoContent() *LogoutUserNoContent {

	return &LogoutUserNoContent{}
}

// WriteResponse to the client
func (o *LogoutUserNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// LogoutUserUnauthorizedCode is the HTTP code returned for type LogoutUserUnauthorized
const LogoutUserUnauthorizedCode int = 401

/*LogoutUserUnauthorized Authentication information is missing or invalid

swagger:response logoutUserUnauthorized
*/
type LogoutUserUnauthorized struct {
	/*

	 */
	WWWAuthenticate string `json:"WWW_Authenticate"`

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewLogoutUserUnauthorized creates LogoutUserUnauthorized with default headers values
func NewLogoutUserUnauthorized() *LogoutUserUnauthorized {

	return &LogoutUserUnauthorized{}
}

// WithWWWAuthenticate adds the wWWAuthenticate to the logout user unauthorized response
func (o *LogoutUserUnauthorized) WithWWWAuthenticate(wWWAuthenticate string) *LogoutUserUnauthorized {
	o.WWWAuthenticate = wWWAuthenticate
	return o
}

// SetWWWAuthenticate sets the wWWAuthenticate to the logout user unauthorized response
func (o *LogoutUserUnauthorized) SetWWWAuthenticate(wWWAuthenticate string) {
	o.WWWAuthenticate = wWWAuthenticate
}

// WithPayload adds the payload to the logout user unauthorized response
func (o *LogoutUserUnauthorized) WithPayload(payload *models.Error) *LogoutUserUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the logout user unauthorized response
func (o *LogoutUserUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LogoutUserUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header WWW_Authenticate

	wWWAuthenticate := o.WWWAuthenticate
	if wWWAuthenticate != "" {
		rw.Header().Set("WWW_Authenticate", wWWAuthenticate)
	}

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
