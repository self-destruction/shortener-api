// Code generated by go-swagger; DO NOT EDIT.

package statistic

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "shortener-api/models"
)

// GetReferersOKCode is the HTTP code returned for type GetReferersOK
const GetReferersOKCode int = 200

/*GetReferersOK Successful operation

swagger:response getReferersOK
*/
type GetReferersOK struct {

	/*
	  In: Body
	*/
	Payload *GetReferersOKBody `json:"body,omitempty"`
}

// NewGetReferersOK creates GetReferersOK with default headers values
func NewGetReferersOK() *GetReferersOK {

	return &GetReferersOK{}
}

// WithPayload adds the payload to the get referers o k response
func (o *GetReferersOK) WithPayload(payload *GetReferersOKBody) *GetReferersOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get referers o k response
func (o *GetReferersOK) SetPayload(payload *GetReferersOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetReferersOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetReferersUnauthorizedCode is the HTTP code returned for type GetReferersUnauthorized
const GetReferersUnauthorizedCode int = 401

/*GetReferersUnauthorized Authentication information is missing or invalid

swagger:response getReferersUnauthorized
*/
type GetReferersUnauthorized struct {
	/*

	 */
	WWWAuthenticate string `json:"WWW_Authenticate"`

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetReferersUnauthorized creates GetReferersUnauthorized with default headers values
func NewGetReferersUnauthorized() *GetReferersUnauthorized {

	return &GetReferersUnauthorized{}
}

// WithWWWAuthenticate adds the wWWAuthenticate to the get referers unauthorized response
func (o *GetReferersUnauthorized) WithWWWAuthenticate(wWWAuthenticate string) *GetReferersUnauthorized {
	o.WWWAuthenticate = wWWAuthenticate
	return o
}

// SetWWWAuthenticate sets the wWWAuthenticate to the get referers unauthorized response
func (o *GetReferersUnauthorized) SetWWWAuthenticate(wWWAuthenticate string) {
	o.WWWAuthenticate = wWWAuthenticate
}

// WithPayload adds the payload to the get referers unauthorized response
func (o *GetReferersUnauthorized) WithPayload(payload *models.Error) *GetReferersUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get referers unauthorized response
func (o *GetReferersUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetReferersUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header WWW_Authenticate

	wWWAuthenticate := o.WWWAuthenticate
	if wWWAuthenticate != "" {
		rw.Header().Set("WWW_Authenticate", wWWAuthenticate)
	}

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetReferersNotFoundCode is the HTTP code returned for type GetReferersNotFound
const GetReferersNotFoundCode int = 404

/*GetReferersNotFound The specified resource was not found

swagger:response getReferersNotFound
*/
type GetReferersNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetReferersNotFound creates GetReferersNotFound with default headers values
func NewGetReferersNotFound() *GetReferersNotFound {

	return &GetReferersNotFound{}
}

// WithPayload adds the payload to the get referers not found response
func (o *GetReferersNotFound) WithPayload(payload *models.Error) *GetReferersNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get referers not found response
func (o *GetReferersNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetReferersNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
