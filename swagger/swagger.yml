swagger: '2.0'
info:
  description: This is a simple API for Shortener URL
  version: 1.0.0
  title: Shortener API
  contact:
    email: syrchikov_max@mail.ru
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
consumes:
  - application/json
produces:
  - application/json

tags:
  - name: User
    description: Operations with users
  - name: Statistic
    description: Operations with user statistic
  - name: Link
    description: Operations with links
securityDefinitions:
  BasicAuth:
    type: basic

paths:
  /users:
    post:
      tags:
        - User
      summary: User registrations
      operationId: createUser
      parameters:
        - in: body
          name: body
          description: User registration
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
                example: simple_username
              password:
                type: string
                example: simple_password
              email:
                type: string
                example: simple@example.com
              timezone:
                type: string
                example: Europe/Moscow
              language:
                type: string
                example: ru_RU
            required:
              - username
              - password
              - email
      responses:
        200:
          $ref: '#/responses/User'
        400:
          $ref: '#/responses/BadRequest'
  /users/login:
    post:
      tags:
        - User
      summary: Logs user into the system
      operationId: loginUser
      parameters:
        - in: body
          name: body
          description: User login
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
                example: simple_username
              password:
                type: string
                example: simple_password
            required:
              - username
              - password
      responses:
        200:
          $ref: '#/responses/User'
        400:
          $ref: '#/responses/BadRequest'
  /users/logout:
    get:
      tags:
        - User
      security:
        - BasicAuth: []
      summary: Logs out current logged in user session
      operationId: logoutUser
      responses:
        204:
          $ref: '#/responses/NoContent'
        401:
          $ref: '#/responses/Unauthorized'
  /users/me:
    get:
      tags:
        - Statistic
      security:
        - BasicAuth: []
      summary: Info about current user
      operationId: getCurrentUser
      responses:
        200:
          $ref: '#/responses/User'
        401:
          $ref: '#/responses/Unauthorized'
  /users/me/shorten_urls:
    post:
      tags:
        - Link
      security:
        - BasicAuth: []
      summary: Creating a new short link
      operationId: createShortLink
      parameters:
        - in: body
          name: body
          description: Full link
          required: true
          schema:
            type: object
            properties:
              url:
                type: string
                description: Full link to some site
                example: 'https://ya.ru'
            required:
              - url
      responses:
        200:
          $ref: '#/responses/Link'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
    get:
      tags:
        - Link
      security:
        - BasicAuth: []
      summary: Get all short links for this user
      operationId: getLinks
      responses:
        200:
          $ref: '#/responses/Links'
        401:
          $ref: '#/responses/Unauthorized'
  /users/me/shorten_urls/{hash}:
    get:
      tags:
        - Statistic
      security:
        - BasicAuth: []
      summary: Get information about a specific short user link
      operationId: getLinkInfo
      parameters:
        - in: path
          name: hash
          description: Hash of short url
          required: true
          type: string
      responses:
        200:
          $ref: '#/responses/Transitions'
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
    delete:
      tags:
        - Link
      security:
        - BasicAuth: []
      summary: Remove short link
      operationId: removeLink
      parameters:
        - in: path
          name: hash
          description: Hash of short url
          required: true
          type: string
      responses:
        204:
          $ref: '#/responses/NoContent'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
  /users/me/shorten_urls/{hash}/referers:
    get:
      tags:
        - Statistic
      security:
        - BasicAuth: []
      summary: Get top from 20 referring sites
      operationId: getReferers
      parameters:
        - in: path
          name: hash
          description: Hash of short url
          required: true
          type: string
      responses:
        200:
          $ref: '#/responses/TopReferers'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
  /shorten_urls/{hash}:
    get:
      tags:
        - Link
      summary: Get link for redirect
      operationId: getLink
      parameters:
        - in: path
          name: hash
          description: Hash of short url
          required: true
          type: string
      responses:
        301:
          $ref: '#/responses/Redirect'
        404:
          $ref: '#/responses/NotFound'

definitions:
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
        minimum: 1
        example: 1
      username:
        type: string
        example: simple_username
      password:
        type: string
        example: y9df4FG3FS4yu4f5hjd
      email:
        type: string
        example: simple@example.com
      dateCreated:
        type: string
        format: date-time
        example: '2016-08-29T09:12:33'
      lastLoginDate:
        type: string
        format: date-time
        example: '2016-08-29T09:12:33'
      timezone:
        type: string
        example: Europe/Moscow
      language:
        type: string
        example: ru_RU
    required:
      - id
      - username
      - password
      - email
  Link:
    type: object
    properties:
      id:
        type: integer
        format: int64
        minimum: 1
        example: 2
      hash:
        type: string
        description: Short url
        example: gD4AyQ
      fullTitle:
        type: string
        description: Full link
        example: 'https://ya.ru'
      user:
        $ref: '#/definitions/User'
      views:
        type: integer
        format: int64
        minimum: 0
        default: 0
        description: Views this link
        example: 532
      dateCreated:
        type: string
        format: date-time
        example: '2016-08-29T09:12:33'
    required:
      - id
      - hash
      - fullTitle
      - user
  Transition:
    type: object
    properties:
      id:
        type: integer
        format: int64
        minimum: 1
        example: 3
      link:
        $ref: '#/definitions/Link'
      referer:
        type: string
        description: Where the transition came from
        example: 'https://vk.com'
      dateCreated:
        type: string
        format: date-time
        example: '2016-08-29T09:12:33'
    required:
      - id
      - link
  Error:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
    required:
      - code
responses:
  NoContent:
    description: NoContent
  BadRequest:
    description: Bad Request
    schema:
      $ref: '#/definitions/Error'
  Unauthorized:
    description: Authentication information is missing or invalid
    headers:
      WWW_Authenticate:
        type: string
    schema:
      $ref: '#/definitions/Error'
  NotFound:
    description: The specified resource was not found
    schema:
      $ref: '#/definitions/Error'
  User:
    description: Get user
    schema:
      $ref: '#/definitions/User'
  Link:
    description: Get link
    schema:
      $ref: '#/definitions/Link'
  Links:
    description: Get array of links
    schema:
      type: object
      properties:
        links:
          type: array
          description: Array of links
          items:
            $ref: '#/definitions/Link'
      required:
        - links
  Transitions:
    description: Transitions for link
    schema:
      type: object
      properties:
        link:
          $ref: '#/definitions/Link'
        transitions:
          type: array
          description: Array of transitions
          items:
            type: object
            properties:
              date:
                type: string
                description: Date of transition
                format: date-time
                example: '2016-08-29T09:12:39'
              count:
                type: integer
                format: Int64
                minimum: 0
                description: Count of transitions for date
                example: 539
            required:
              - date
              - count
      required:
        - link
        - transitions
  TopReferers:
    description: Successful operation
    schema:
      type: object
      properties:
        top:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                minimum: 1
                example: 1
              referer:
                type: string
                example: 'https://vk.com'
              count:
                type: integer
                minimum: 1
                example: 539
            required:
              - id
              - referer
              - count
      required:
        - top
  Redirect:
    description: Link redirect
# Added by API Auto Mocking Plugin
host: localhost:8080
basePath: /api/v1
schemes:
 - http